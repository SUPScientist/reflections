What happens when you initialize a repository? Why do you need to do it?
  It says you initialized it and it adds a .git file. You need to do it
  so that it knows to start tracking that file.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
  The staging area lets git know what files in a given working directory you're
  planning on committing changes to in a given, presumably upcoming commit.

How can you use the staging area to make sure you have one commit per logical
change?
  You can add one file at a time, if you want, to make sure that you're not committing
  the entire working directory, even if you've made changes to multiple files.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
  When you have a major change that you want to try out without messing up a functional
  version that you already have (experimental features, for example)

How do the diagrams help you visualize the branch structure?
  You can see the (non)linearity of different changes that you want to make and
  how they relate to each other.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
